---
// Packages
import { Picture } from "astro:assets"
import type { ImageMetadata } from "astro"

// Components
import SocialShare from "./SocialShare.astro"

interface Speaker {
  id: string
  name: string
  roleOrg: string
  tags: string[]
  image: string
}

interface Session {
  date: string
  timeSlot: string
  title: string
  content: string
  speakers: Speaker[]
  category?: string
  isSpecialEvent?: boolean
  room?: string
}

interface Props {
  currentDay?: string
  activeCategory?: string
}

// Import the schedule data
import scheduleData from "json/Schedule.json"

// Import all images
const images = import.meta.glob<{ default: ImageMetadata }>(
  "images/speakers/*.{jpeg,jpg,png,gif}"
)

// Use the provided props or default values
const { currentDay = "May 6", activeCategory = "All" } = Astro.props

// Helper function to get category name from tag ID
const getCategoryNameFromTag = (tagId: string): string => {
  const category = scheduleData.categories.find((cat) => cat.id === tagId)
  return category ? category.name : tagId
}

// Improved function to sort sessions by time
const sortSessionsByTime = (sessions: Session[]) => {
  return sessions.sort((a, b) => {
    // Extract start times from timeSlot
    const [aStartTime] = a.timeSlot.split("-")
    const [bStartTime] = b.timeSlot.split("-")

    // Split hours and minutes
    const [aHour, aMinute] = aStartTime.split(":").map(Number)
    const [bHour, bMinute] = bStartTime.split(":").map(Number)

    // Compare times
    return aHour * 60 + aMinute - (bHour * 60 + bMinute)
  })
}

// Prepare all sessions for the current day
const allSessions: Session[] = Object.entries(scheduleData.sessions).flatMap(
  ([categoryName, categorySessions]) =>
    categorySessions
      .filter((session: Session) => session.date === currentDay)
      .map((session) => ({
        ...session,
        category:
          scheduleData.categories.find((cat) => cat.id === categoryName)
            ?.name || categoryName,
        isSpecialEvent:
          session.title === "Keynote" ||
          session.title === "Morning Coffee" ||
          session.title === "Lunch Break" ||
          session.title === "Afternoon Coffee" ||
          session.title === "Spotlight Demos" ||
          session.title.startsWith("Spotlight Talks") ||
          session.title.startsWith("Registration")
      }))
)

// Remove duplicates from all sessions while preserving the first occurrence
const uniqueAllSessions = Array.from(
  new Map(allSessions.map((session) => [session.title, session])).values()
)

const sortedAllSessions = sortSessionsByTime(uniqueAllSessions)

// Helper function to generate event URL
const getEventUrl = (title: string): string => {
  // Get the current URL origin (domain)
  const origin = Astro.url.origin;
  // Create the full URL with domain
  return `${origin}/schedule/${title.toLowerCase().replace(/[^\w\s-]/g, '').replace(/\s+/g, "-").replace(/-+/g, '-').trim()}/`;
}
---

<div class="filter-container filter-alpha-animate">
  <div class="overlay overlay-dark" data-filter-toggle="close">
    <div class="close" data-filter-toggle="close">
      <div class="close-fill"></div>
      <div class="bar bar-top"></div>
      <div class="bar bar-bottom"></div>
    </div>
  </div>
  <div class="filter-box">
    <p>Filter:</p>
    <div class="filter-group" data-filter-group>
      <div class="date-outerwrap">
        <div class="date-wrapper">
          {
            scheduleData.days.map((day) => (
              <a
                data-barba-update
                href={day.url}
                class={`single-filter ${currentDay === day.date ? "dateselected" : ""}`}
              >
                <span>{day.title}</span>
              </a>
            ))
          }
        </div>
      </div>
      <div
        class="single-filter"
        data-filter-status={activeCategory === "All" ? "active" : "not-active"}
        data-filter-category="all"
      >
        <span>All</span>
      </div>
      {
        scheduleData.categories.map((category) => (
          <div
            class="single-filter"
            data-filter-status={
              category.name === activeCategory ? "active" : "not-active"
            }
            data-filter-category={category.name.toLowerCase().replace(/ /g, '-')}
          >
            <span>{category.name}</span>
          </div>
        ))
      }
    </div>
  </div>
</div>

<section
  class="section section-agenda-grid"
  id="grid"
  data-filter-section
  data-theme-section="light"
  data-bg-section="light"
  data-scroll-section
>
  <div class="container">
    <div class="row row-filter">
      <div class="col date-fw">
        <div class="filter-group" data-filter-group>
          <div class="date-outerwrap">
            <div class="date-wrapper">
              {
                scheduleData.days.map((day) => (
                  <a
                    data-barba-update
                    href={day.url}
                    class={`single-filter ${currentDay === day.date ? "dateselected" : ""}`}
                  >
                    <span>{day.title}</span>
                  </a>
                ))
              }
            </div>
          </div>
          <div class="date-divider"></div>
          <div
            class="single-filter"
            data-filter-status={activeCategory === "All"
              ? "active"
              : "not-active"}
            data-filter-category="all"
          >
            <span>All</span>
          </div>
          {
            scheduleData.categories.map((category) => (
              <div
                class="single-filter"
                data-filter-status={
                  category.name === activeCategory ? "active" : "not-active"
                }
                data-filter-category={category.name.toLowerCase().replace(/ /g, '-')}
              >
                <span>{category.name}</span>
              </div>
            ))
          }
        </div>
      </div>
    </div>
    <div class="row row-list accordion visible" data-filter-grid>
      <div
        class="list-group"
        data-filter-status={activeCategory === "All" ? "active" : "not-active"}
        data-filter-category="all"
      >
        {
          sortedAllSessions.length > 0 ? (
            <ul class="row row-list">
              {sortedAllSessions.map((session: Session) => (
                <li
                  class={`single-agenda-card single-accordion-item card-hover ${session.isSpecialEvent ? 'special-event' : ''}`}
                  data-accordion-status="not-active"
                  data-filter-status="active"
                  data-filter-category="all"
                >
                  <div
                    class="top"
                    data-accordion-toggle={
                      session.speakers.length > 0 || session.content
                        ? true
                        : null
                    }
                  >
                    <div class="left">
                      <div class="timeslot">
                        <p class="timedate">{session.date}</p>
                        <p>{session.timeSlot}</p>
                      </div>
                      <h2 class="h5">{session.title}</h2>
                    </div>
                    <div class="tracks">
                      <div class="single-filter">
                        <span>
                          {session.isSpecialEvent ? "All Tracks" : session.category}
                        </span>
                      </div>
                    </div>
                  </div>
                  {(session.speakers.length > 0 || session.content) && (
                    <div class="bottom">
                      <div class="bottom-wrap">
                        <div class="bottom-content">
                          {session.category && (
                            <div class="card-row styled-content">
                             <div class="location-row"> <svg width="16" height="19" viewBox="0 0 16 19" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M8 18.6668C8.12016 18.6653 8.23643 18.624 8.33067 18.5494C8.65067 18.2934 16 12.3307 16 8.00005C16 5.8783 15.1571 3.84346 13.6569 2.34316C12.1566 0.84286 10.1217 0 8 0C5.87827 0 3.84344 0.84286 2.34315 2.34316C0.842855 3.84346 0 5.8783 0 8.00005C0 12.3307 7.34933 18.2934 7.66933 18.5494C7.76357 18.624 7.87984 18.6653 8 18.6668ZM8 4.80003C8.52742 4.80003 9.04299 4.95643 9.48152 5.24945C9.92005 5.54246 10.2618 5.95894 10.4637 6.44622C10.6655 6.93349 10.7183 7.46967 10.6154 7.98696C10.5125 8.50424 10.2586 8.9794 9.88562 9.35234C9.51268 9.72528 9.03752 9.97926 8.52024 10.0822C8.00296 10.185 7.46678 10.1322 6.97951 9.9304C6.49224 9.72857 6.07576 9.38677 5.78275 8.94824C5.48973 8.50971 5.33333 7.99413 5.33333 7.46671C5.33333 6.75946 5.61429 6.08118 6.11438 5.58108C6.61448 5.08098 7.29276 4.80003 8 4.80003Z" fill="#1D1D1D"/>
</svg>
<p>{session.room || scheduleData.categories.find(cat => cat.name === session.category)?.room || 'TBA'}</p></div>
                            </div>
                          )}
                          {session.content && (
                            <div
                              class="card-row styled-content"
                              set:html={session.content}
                            />
                          )}

                          <!-- Wrap speakers and social share in a single container -->
                          <div class="speakers-and-share-container">
                            {session.speakers.length > 0 && (
                              <div class="card-row card-row-speakers">
                                {session.speakers.map((speaker: Speaker) => (
                                  <div class="card-col">
                                    <a
                                      class="single-speakers-card"
                                      href={`/speakers/${speaker.id}/`}
                                    >
                                      <div class="card-row card-row-image">
                                        <div class="card-image">
                                          {speaker?.image &&
                                            images[
                                              `/public/images/speakers/${speaker.image}`
                                            ] && (
                                              <Picture
                                                src={images[
                                                  `/public/images/speakers/${speaker.image}`
                                                ]()}
                                                formats={["webp", "jpg"]}
                                                alt={speaker.name}
                                                class="overlay"
                                                widths={[
                                                  275, 400, 500, 600, 750, 900,
                                                ]}
                                                sizes="(max-width: 700px) 58vw, 450px"
                                              />
                                            )}
                                        </div>
                                        <div class="card-tags group-tags">
                                          {speaker.tags.map((tag) => (
                                            <div class="single-tag">
                                              <p>{getCategoryNameFromTag(tag)}</p>
                                            </div>
                                          ))}
                                        </div>
                                      </div>
                                      <div class="card-row card-row-info">
                                        <h3 class="h5">{speaker.name}</h3>
                                        <p>{speaker.roleOrg}</p>
                                      </div>
                                    </a>
                                  </div>
                                ))}
                              </div>
                            )}

                            <!-- Social share component with reduced spacing -->
                              <SocialShare
                                title={`${session.title} - GOSIM AI Paris 2025`}
                                url={getEventUrl(session.title)}
                                description={session.content ? session.content.replace(/<[^>]*>/g, "").substring(0, 160) : ""}
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  )}
                </li>
              ))}
            </ul>
          ) : (
            <p>No sessions available for this day</p>
          )
        }
      </div>
      {
        scheduleData.categories.map((category) => {
          const categorySessions = allSessions.filter(
            (session) => session.category === category.name
          )
          const sortedCategorySessions = sortSessionsByTime(categorySessions)

          return (
            <div
              class="list-group"
              data-filter-status={
                category.name === activeCategory ? "active" : "not-active"
              }
              data-filter-category={category.name.toLowerCase().replace(/ /g, '-')}
            >
              {sortedCategorySessions.length > 0 ? (
                <ul class="row row-list">
                  {sortedCategorySessions.map((session: Session) => (
                    <li
                      class={`single-agenda-card single-accordion-item card-hover ${session.isSpecialEvent ? 'special-event' : ''}`}
                      data-accordion-status="not-active"
                      data-filter-status="active"
                      data-filter-category={category.name.toLowerCase().replace(/ /g, '-')}
                    >
                      <div
                        class="top"
                        data-accordion-toggle={
                          session.speakers.length > 0 || session.content
                            ? true
                            : null
                        }
                      >
                        <div class="left">
                          <div class="timeslot">
                            <p class="timedate">{session.date}</p>
                            <p>{session.timeSlot}</p>
                          </div>
                          <h2 class="h5">{session.title}</h2>
                        </div>
                        <div class="tracks">
                          <div class="single-filter">
                            <span>
                              {session.isSpecialEvent
                                ? "All Tracks"
                                : session.category}
                            </span>
                          </div>
                        </div>
                      </div>
                      {(session.speakers.length > 0 || session.content) && (
                        <div class="bottom">
                          <div class="bottom-wrap">
                            <div class="bottom-content">
                              {session.category && (
                                <div class="card-row styled-content">
                                  <div class="location-row"><svg width="16" height="19" viewBox="0 0 16 19" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M8 18.6668C8.12016 18.6653 8.23643 18.624 8.33067 18.5494C8.65067 18.2934 16 12.3307 16 8.00005C16 5.8783 15.1571 3.84346 13.6569 2.34316C12.1566 0.84286 10.1217 0 8 0C5.87827 0 3.84344 0.84286 2.34315 2.34316C0.842855 3.84346 0 5.8783 0 8.00005C0 12.3307 7.34933 18.2934 7.66933 18.5494C7.76357 18.624 7.87984 18.6653 8 18.6668ZM8 4.80003C8.52742 4.80003 9.04299 4.95643 9.48152 5.24945C9.92005 5.54246 10.2618 5.95894 10.4637 6.44622C10.6655 6.93349 10.7183 7.46967 10.6154 7.98696C10.5125 8.50424 10.2586 8.9794 9.88562 9.35234C9.51268 9.72528 9.03752 9.97926 8.52024 10.0822C8.00296 10.185 7.46678 10.1322 6.97951 9.9304C6.49224 9.72857 6.07576 9.38677 5.78275 8.94824C5.48973 8.50971 5.33333 7.99413 5.33333 7.46671C5.33333 6.75946 5.61429 6.08118 6.11438 5.58108C6.61448 5.08098 7.29276 4.80003 8 4.80003Z" fill="#1D1D1D"/>
</svg><p>{session.room || scheduleData.categories.find(cat => cat.name === session.category)?.room || 'TBA'}</p></div>

                                </div>
                              )}
                              {session.content && (
                                <div
                                  class="card-row styled-content"
                                  set:html={session.content}
                                />
                              )}

                              <!-- Wrap speakers and social share in a single container -->
                              <div class="speakers-and-share-container">
                                {session.speakers.length > 0 && (
                                  <div class="card-row card-row-speakers">
                                    {session.speakers.map((speaker: Speaker) => (
                                      <div class="card-col">
                                        <a
                                          class="single-speakers-card"
                                          href={`/speakers/${speaker.id}/`}
                                        >
                                          <div class="card-row card-row-image">
                                            <div class="card-image">
                                              {speaker?.image &&
                                                images[
                                                  `/public/images/speakers/${speaker.image}`
                                                ] && (
                                                  <Picture
                                                    src={images[
                                                      `/public/images/speakers/${speaker.image}`
                                                    ]()}
                                                    formats={["webp", "jpg"]}
                                                    alt={speaker.name}
                                                    class="overlay"
                                                    widths={[
                                                      275, 400, 500, 600, 750,
                                                      900,
                                                    ]}
                                                    sizes="(max-width: 700px) 58vw, 450px"
                                                  />
                                                )}
                                            </div>
                                            <div class="card-tags group-tags">
                                              {speaker.tags.map((tag) => (
                                                <div class="single-tag">
                                                  <p>
                                                    {getCategoryNameFromTag(tag)}
                                                  </p>
                                                </div>
                                              ))}
                                            </div>
                                          </div>
                                          <div class="card-row card-row-info">
                                            <h3 class="h5">{speaker.name}</h3>
                                            <p>{speaker.roleOrg}</p>
                                          </div>
                                        </a>
                                      </div>
                                    ))}
                                  </div>
                                )}

                                <!-- Social share component with reduced spacing -->
                                  <SocialShare
                                    title={`${session.title} - GOSIM AI Paris 2025`}
                                    url={getEventUrl(session.title)}
                                    description={session.content ? session.content.replace(/<[^>]*>/g, "").substring(0, 160) : ""}
                                  />
                              </div>
                            </div>
                          </div>
                        </div>
                      )}
                    </li>
                  ))}
                </ul>
              ) : (
                <p>No {category.name} sessions available for this day</p>
              )}
            </div>
          )
        })
      }
      <p style="text-align: center;  margin: 1rem 0;">
        Schedules are subject to change
      </p>
    </div>
  </div>
</section>

<style>
  .speakers-and-share-container {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }
</style>